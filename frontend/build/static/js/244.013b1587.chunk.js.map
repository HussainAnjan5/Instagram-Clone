{"version":3,"file":"static/js/244.013b1587.chunk.js","mappings":"4IA6BA,IA1Ba,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACZ,OACI,gBAAKC,UAAU,gBAAf,UAEI,iBAAKA,UAAU,6CAAf,WAEI,gBAAKA,UAAU,iJAAf,UACI,gBAAKC,UAAU,QAAQD,UAAU,mCAAmCE,IAAKC,EAAUC,IAAI,gBAG3F,iBAAKJ,UAAU,sCAAf,UAEKD,GAED,cAAGC,UAAU,2BAAb,2BACA,iBAAKA,UAAU,4BAAf,WACI,gBAAKC,UAAU,QAAQI,MAAM,QAAQH,IAAI,4GAA4GE,IAAI,cACzJ,gBAAKH,UAAU,QAAQI,MAAM,QAAQH,IAAI,gHAAgHE,IAAI,2B,0JCkErL,UA7EsB,WAElB,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAEf,GAAoCC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,kBAAzDC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,QAExB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8CF,EAAAA,EAAAA,UAAS,IAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KA2BA,OAXAC,EAAAA,EAAAA,YAAU,WACFR,IACAS,EAAAA,GAAAA,MAAYT,GACZT,GAASmB,EAAAA,EAAAA,QAETT,IACAQ,EAAAA,GAAAA,QAAc,iCACdhB,EAAS,aAEd,CAACF,EAAUS,EAAOC,EAASR,KAG1B,gCACKS,IAAW,SAAC,IAAD,KACZ,UAAC,IAAD,YACI,iBAAKjB,UAAU,gDAAf,WACI,gBAAKC,UAAU,QAAQD,UAAU,mCAAmCE,IAAI,wFAAwFE,IAAI,MACpK,kBAAMsB,SA/BD,SAACC,GAClBA,EAAEC,iBAEET,EAAYU,OAAS,EACrBL,EAAAA,GAAAA,KAAW,gDAGXL,IAAgBE,EAIpBf,GAASwB,EAAAA,EAAAA,IAAcpB,EAAOqB,MAAOZ,IAHjCK,EAAAA,GAAAA,MAAY,2BAuB0BxB,UAAU,6DAAxC,WACI,SAAC,IAAD,CACIgC,WAAS,EACTC,KAAK,QACLC,MAAM,eACNC,KAAK,WACLC,KAAK,cACLC,MAAOlB,EACPmB,SAAU,SAACX,GAAD,OAAOP,EAAeO,EAAEY,OAAOF,QACzCG,UAAQ,KAEZ,SAAC,IAAD,CACIR,WAAS,EACTC,KAAK,QACLC,MAAM,uBACNC,KAAK,WACLC,KAAK,kBACLC,MAAOhB,EACPiB,SAAU,SAACX,GAAD,OAAOL,EAAmBK,EAAEY,OAAOF,QAC7CG,UAAQ,KAEZ,mBAAQL,KAAK,SAASnC,UAAU,6DAAhC,qBACA,iBAAMA,UAAU,qBAAhB,iBACA,SAAC,KAAD,CAAMyC,GAAG,mBAAmBzC,UAAU,oCAAtC,qCAIR,gBAAKA,UAAU,kCAAf,UACI,yDAA+B,SAAC,KAAD,CAAMyC,GAAG,SAASzC,UAAU,oBAA5B,iC","sources":["components/User/Auth.jsx","components/User/ResetPassword.jsx"],"sourcesContent":["import React from 'react';\r\nimport homepage from '../../assests/images/homepage.webp';\r\n\r\nconst Auth = ({ children }) => {\r\n    return (\r\n        <div className=\"w-full h-full\">\r\n\r\n            <div className=\"flex w-full h-screen md:w-2/3 py-8 mx-auto\">\r\n\r\n                <div className=\"hidden md:block bg-[url('https://www.instagram.com/static/images/homepage/phones/home-phones.png/1dc085cdb87d.png')] my-10 h-full bg-no-repeat\">\r\n                    <img draggable=\"false\" className=\"mr-[80px] mt-[1.8rem] ml-[155px]\" src={homepage} alt=\"homepage\" />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col gap-3 w-full md:w-2/5\">\r\n\r\n                    {children}\r\n\r\n                    <p className=\"text-center text-sm my-2\">Get the app.</p>\r\n                    <div className=\"flex gap-3 justify-center\" >\r\n                        <img draggable=\"false\" width=\"130px\" src=\"https://www.instagram.com/static/images/appstore-install-badges/badge_ios_english-en.png/180ae7a0bcf7.png\" alt=\"appstore\" />\r\n                        <img draggable=\"false\" width=\"130px\" src=\"https://www.instagram.com/static/images/appstore-install-badges/badge_android_english-en.png/e9cd846dc748.png\" alt=\"playstore\" />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth","import React, { useEffect, useState } from 'react'\r\nimport TextField from '@mui/material/TextField';\r\nimport Auth from './Auth';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { clearErrors, resetPassword } from '../../actions/userAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport BackdropLoader from '../Layouts/BackdropLoader';\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n\r\n    const { error, success, loading } = useSelector((state) => state.forgotPassword);\r\n\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newPassword.length < 8) {\r\n            toast.warn(\"Password length must be atleast 8 characters\");\r\n            return;\r\n        }\r\n        if (newPassword !== confirmPassword) {\r\n            toast.error(\"Password Doesn't Match\");\r\n            return;\r\n        }\r\n        dispatch(resetPassword(params.token, newPassword));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            toast.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n        if (success) {\r\n            toast.success(\"Password Updated Successfully\");\r\n            navigate(\"/login\")\r\n        }\r\n    }, [dispatch, error, success, navigate]);\r\n\r\n    return (\r\n        <>\r\n            {loading && <BackdropLoader />}\r\n            <Auth>\r\n                <div className=\"bg-white border flex flex-col gap-2 p-4 pt-10\">\r\n                    <img draggable=\"false\" className=\"mx-auto h-30 w-36 object-contain\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"\" />\r\n                    <form onSubmit={handleSubmit} className=\"flex flex-col justify-center items-center gap-3 m-3 md:m-8\">\r\n                        <TextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label=\"New Password\"\r\n                            type=\"password\"\r\n                            name=\"newPassword\"\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label=\"Confirm New Password\"\r\n                            type=\"password\"\r\n                            name=\"confirmPassword\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                        <button type=\"submit\" className=\"bg-primary-blue font-medium py-2 rounded text-white w-full\">Submit</button>\r\n                        <span className=\"my-3 text-gray-700\">OR</span>\r\n                        <Link to=\"/password/forgot\" className=\"text-sm font-medium text-blue-800\">Forgot password?</Link>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"bg-white border p-5 text-center\">\r\n                    <span>Already have an account? <Link to=\"/login\" className=\"text-primary-blue\">Log in</Link></span>\r\n                </div>\r\n            </Auth>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResetPassword"],"names":["children","className","draggable","src","homepage","alt","width","dispatch","useDispatch","navigate","useNavigate","params","useParams","useSelector","state","forgotPassword","error","success","loading","useState","newPassword","setNewPassword","confirmPassword","setConfirmPassword","useEffect","toast","clearErrors","onSubmit","e","preventDefault","length","resetPassword","token","fullWidth","size","label","type","name","value","onChange","target","required","to"],"sourceRoot":""}